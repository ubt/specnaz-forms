'use client';

import { useState, useEffect, useCallback, useMemo } from 'react';
import ScoreRow from '@/components/ScoreRow';

const StateHandler = ({ loading, error, empty, onRetry, children }) => {
  if (loading) {
    return (
      <div style={{
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: '100vh',
        backgroundColor: '#f8f9fa'
      }}>
        <div style={{ textAlign: 'center' }}>
          <div className="loading-spinner" style={{
            width: 48,
            height: 48,
            border: '4px solid #e9ecef',
            borderTop: '4px solid #007bff',
            borderRadius: '50%',
            margin: '0 auto 16px'
          }}></div>
          <p style={{ color: '#6c757d', fontSize: 16 }}>–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤—ã–∫–æ–≤ –¥–ª—è –æ—Ü–µ–Ω–∫–∏...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div style={{
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: '100vh',
        backgroundColor: '#f8f9fa',
        padding: 24
      }}>
        <div style={{ textAlign: 'center', maxWidth: 600 }}>
          <div style={{ fontSize: 48, marginBottom: 16 }}>‚ö†Ô∏è</div>
          <h3 style={{ 
            fontSize: 24, 
            fontWeight: 600, 
            color: '#dc3545', 
            marginBottom: 16 
          }}>
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
          </h3>
          <p style={{ 
            color: '#6c757d', 
            marginBottom: 24,
            lineHeight: 1.5,
            fontSize: 16
          }}>
            {error}
          </p>
          <button
            onClick={onRetry}
            style={{
              backgroundColor: '#007bff',
              color: 'white',
              padding: '12px 24px',
              border: 'none',
              borderRadius: 8,
              fontSize: 16,
              fontWeight: 600,
              cursor: 'pointer',
              transition: 'background-color 0.2s ease'
            }}
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  if (empty) {
    return (
      <div style={{
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        minHeight: '100vh',
        backgroundColor: '#f8f9fa',
        padding: 24
      }}>
        <div style={{ textAlign: 'center', maxWidth: 600 }}>
          <div style={{ fontSize: 48, marginBottom: 16 }}>üìã</div>
          <h3 style={{ 
            fontSize: 24, 
            fontWeight: 600, 
            color: '#6c757d', 
            marginBottom: 16 
          }}>
            –ù–∞–≤—ã–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
          </h3>
          <p style={{ 
            color: '#6c757d',
            lineHeight: 1.5,
            fontSize: 16
          }}>
            –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∑–∞–¥–∞—á–∏ –ø–æ –æ—Ü–µ–Ω–∫–µ –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â—ë –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. 
            –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞—Ç—Ä–∏—Ü—ã –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π.
          </p>
        </div>
      </div>
    );
  }

  return children;
};

function useSkillsData(token) {
  const [state, setState] = useState({
    skillGroups: [],
    loading: true,
    error: null,
    scoreData: new Map(),
    stats: null,
    loadTime: 0
  });

  const fetchSkills = useCallback(async () => {
    const start = performance.now();
    setState(prev => ({ ...prev, loading: true, error: null }));
    
    try {
      console.log('[SKILLS] –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–∞–≤—ã–∫–æ–≤ –¥–ª—è —Ç–æ–∫–µ–Ω–∞:', token);
      
      const response = await fetch(`/api/form/${token}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      console.log('[SKILLS] –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
      
      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(
          errorData.error || `HTTP ${response.status}: –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞`
        );
      }

      const result = await response.json();
      console.log('[SKILLS] –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API:', result);

      if (!result.rows || !Array.isArray(result.rows)) {
        throw new Error('API –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
      }

      const grouped = {};
      for (const row of result.rows) {
        const key = `${row.employeeId}_${row.role}`;
        if (!grouped[key]) {
          grouped[key] = {
            employeeId: row.employeeId,
            employeeName: row.employeeName,
            role: row.role,
            items: []
          };
        }
        grouped[key].items.push({
          pageId: row.pageId,
          name: row.name,
          description: row.description,
          current: row.current,
          role: row.role
        });
      }

      const skillGroups = Object.values(grouped);
      console.log(`[SKILLS] –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${skillGroups.length} –≥—Ä—É–ø–ø –Ω–∞–≤—ã–∫–æ–≤`);
      
      setState(prev => ({
        ...prev,
        skillGroups,
        loading: false,
        error: null,
        stats: result.stats,
        loadTime: (performance.now() - start) / 1000
      }));
      
    } catch (error) {
      console.error('[SKILLS] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–≤—ã–∫–æ–≤:', error);
      setState(prev => ({ 
        ...prev, 
        error: error.message, 
        loading: false,
        skillGroups: []
      }));
    }
  }, [token]);

  const updateSkillScore = useCallback((pageId, role, value) => {
    setState(prev => {
      const newScoreData = new Map(prev.scoreData);
      newScoreData.set(pageId, { value, role });
      return {
        ...prev,
        scoreData: newScoreData
      };
    });
  }, []);

  useEffect(() => {
    if (token) {
      fetchSkills();
    }
  }, [token, fetchSkills]);

  return {
    ...state,
    updateSkillScore,
    refetch: fetchSkills
  };
}

export default function SkillsAssessmentForm({ params }) {
  const { token } = params;
  const [submitting, setSubmitting] = useState(false);
  const [submitMessage, setSubmitMessage] = useState('');
  
  const {
    skillGroups,
    loading,
    error,
    scoreData,
    stats,
    loadTime,
    updateSkillScore,
    refetch
  } = useSkillsData(token);

  const totalSkills = useMemo(() => {
    return skillGroups.reduce((sum, group) => sum + (group.items?.length || 0), 0);
  }, [skillGroups]);

  const ratedSkills = scoreData.size;

  const [collapsedGroups, setCollapsedGroups] = useState({});
  const toggleGroup = useCallback((key) => {
    setCollapsedGroups(prev => ({ ...prev, [key]: !prev[key] }));
  }, []);

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Å –ª—É—á—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π KV
  const handleSubmit = useCallback(async (e) => {
    e.preventDefault();
    
    if (scoreData.size === 0) {
      setSubmitMessage('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ü–µ–Ω–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –Ω–∞–≤—ã–∫');
      return;
    }

    setSubmitting(true);
    setSubmitMessage('');
    
    try {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º scoreData –≤ —Ñ–æ—Ä–º–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è batch API
      const operations = Array.from(scoreData.entries()).map(([pageId, scoreInfo]) => {
        const fieldMapping = {
          'self': 'Self_score',
          'p1_peer': 'P1_score', 
          'p2_peer': 'P2_score',
          'manager': 'Manager_score',
          'peer': 'P1_score' // fallback
        };
        
        const field = fieldMapping[scoreInfo.role] || fieldMapping.peer;
        
        return {
          pageId: pageId,
          properties: {
            [field]: { number: scoreInfo.value }
          }
        };
      });

      console.log(`[SUBMIT] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${operations.length} –æ–ø–µ—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ batch API`);
      
      // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–æ–ª–µ–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
      let batchOptions = {
        batchSize: Math.min(operations.length <= 20 ? 20 : 40, 50),
        concurrency: 2,  // –£–º–µ–Ω—å—à–µ–Ω–æ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è rate limits
        rateLimitDelay: operations.length > 30 ? 3000 : 2500,  // –£–≤–µ–ª–∏—á–µ–Ω–æ
        maxRetries: 3,
        forceKV: false  // –ù–µ –ø—Ä–∏–Ω—É–∂–¥–∞–µ–º KV, –ø–æ–∑–≤–æ–ª—è–µ–º —Å–∏—Å—Ç–µ–º–µ –≤—ã–±—Ä–∞—Ç—å
      };
      
      // –î–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º KV, –Ω–æ –Ω–µ –ø—Ä–∏–Ω—É–∂–¥–∞–µ–º
      if (operations.length > 15) {
        batchOptions.forceKV = false; // –ü–æ–∑–≤–æ–ª—è–µ–º —Å–∏—Å—Ç–µ–º–µ —Ä–µ—à–∏—Ç—å
        batchOptions.batchSize = 50;
        batchOptions.concurrency = 2;
        batchOptions.rateLimitDelay = 3000;
      }
      
      console.log(`[SUBMIT] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ batch:`, batchOptions);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ batch API
      const response = await fetch('/api/batch/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({ 
          operations,
          options: batchOptions
        })
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData.error || `HTTP ${response.status}: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏`);
      }

      const result = await response.json();
      console.log('[SUBMIT] –û—Ç–≤–µ—Ç –æ—Ç batch API:', result);
      
      if (result.mode === 'kv_queue') {
        // KV –æ—á–µ—Ä–µ–¥–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è
        setSubmitMessage(`${result.totalOperations} –æ—Ü–µ–Ω–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –°–ø–∞—Å–∏–±–æ!`);

      } else if (result.mode === 'direct_processing' || result.mode === 'direct') {
        // –ü—Ä—è–º–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        const successRate = result.stats.totalOperations > 0 ?
          (result.stats.successful / result.stats.totalOperations * 100).toFixed(1) : 0;

			setSubmitMessage(`${result.totalOperations} –æ—Ü–µ–Ω–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –°–ø–∞—Å–∏–±–æ!`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏
        if (result.stats.failed > 0) {
          const errorDetails = result.results
            .filter(r => r.status === 'error')
            .slice(0, 3)
            .map(r => r.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
            .join('; ');

          setTimeout(() => {
            setSubmitMessage(prev =>
              prev + ` –û—à–∏–±–∫–∏: ${errorDetails}${result.stats.failed > 3 ? '...' : ''}`
            );
          }, 2000);
        }
      } else {
        // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º
        setSubmitMessage(`‚úÖ –û–ø–µ—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —Ä–µ–∂–∏–º–µ: ${result.mode}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.`);
      }
      
    } catch (error) {
      console.error('[SUBMIT] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
      
      let errorMessage = `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${error.message}`;
      
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫
      if (error.message.includes('KV')) {
        errorMessage += ' (–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∞—Å—å –Ω–∞ –ø—Ä—è–º—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É)';
      } else if (error.message.includes('rate limit') || error.message.includes('429')) {
        errorMessage = '‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
      } else if (error.message.includes('timeout')) {
        errorMessage = '‚ùå –¢–∞–π–º-–∞—É—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ü–µ–Ω–∏–≤–∞–µ–º—ã—Ö –Ω–∞–≤—ã–∫–æ–≤.';
      } else if (error.message.includes('503')) {
        errorMessage = '‚ùå –°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —É–º–µ–Ω—å—à–∏—Ç–µ –æ–±—ä–µ–º –æ–ø–µ—Ä–∞—Ü–∏–π.';
      }
      
      setSubmitMessage(errorMessage);
    } finally {
      setSubmitting(false);
    }
  }, [scoreData, token]);

  return (
    <div style={{ 
      minHeight: '100vh', 
      backgroundColor: '#f8f9fa',
      fontFamily: 'system-ui, -apple-system, sans-serif'
    }}>
      <StateHandler 
        loading={loading} 
        error={error} 
        empty={skillGroups.length === 0}
        onRetry={refetch}
      >
        <div style={{ 
          maxWidth: 1200, 
          margin: '0 auto', 
          padding: 24 
        }}>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div style={{
            backgroundColor: 'white',
            borderRadius: 12,
            padding: 32,
            marginBottom: 24,
            boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
            textAlign: 'center'
          }}>
            <h1 style={{ 
              fontSize: 28, 
              fontWeight: 700, 
              color: '#2c3e50', 
              marginBottom: 16 
            }}>
              üìä –§–æ—Ä–º–∞ –æ—Ü–µ–Ω–∫–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π
            </h1>
			 {stats?.reviewerName && (
              <div style={{
                color: '#495057',
                fontSize: 16,
                fontWeight: 600
              }}>
                –û—Ü–µ–Ω–∏–≤–∞—é—â–∏–π: {stats.reviewerName}
              </div>
            )}
            <div style={{
              color: '#6c757d',
              marginBottom: 16,
              fontSize: 16,
              lineHeight: 1.5
            }}>
              –û—Ü–µ–Ω–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è –Ω–∞–≤—ã–∫–∞–º–∏ –ø–æ —à–∫–∞–ª–µ –æ—Ç 0 –¥–æ 5.
          <br/>
              –§–æ—Ä–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º, –æ—à–∏–±–æ–∫ –∞ —Ç–∞–∫–∂–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ <a href ="https://t.me/hanbeio">telegram</a> 
            </div>
          </div>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
          <div style={{
            backgroundColor: 'white',
            borderRadius: 12,
            padding: 20,
            marginBottom: 24,
            boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
          }}>
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              marginBottom: 12
            }}>
              <span style={{ fontWeight: 600, color: '#495057' }}>
                –ü—Ä–æ–≥—Ä–µ—Å—Å –æ—Ü–µ–Ω–∫–∏
              </span>
              <span style={{ color: '#6c757d', fontSize: 14 }}>
                {ratedSkills} –∏–∑ {totalSkills} –Ω–∞–≤—ã–∫–æ–≤
              </span>
            </div>
            <div style={{
              width: '100%',
              height: 8,
              backgroundColor: '#e9ecef',
              borderRadius: 4,
              overflow: 'hidden'
            }}>
              <div className="progress-bar" style={{
                width: `${totalSkills > 0 ? (ratedSkills / totalSkills) * 100 : 0}%`,
                height: '100%',
                backgroundColor: ratedSkills === totalSkills ? '#28a745' : '#007bff',
                borderRadius: 4,
                transition: 'all 0.3s ease'
              }}></div>
            </div>        
          </div>

          {/* –§–æ—Ä–º–∞ –æ—Ü–µ–Ω–∫–∏ */}
          <form onSubmit={handleSubmit}>
            {skillGroups.map((group) => {
              const key = `${group.employeeId}_${group.role}`;
              const isCollapsed = collapsedGroups[key];
              return (
                <div
                  key={key}
                  style={{
                    backgroundColor: 'white',
                    borderRadius: 12,
                    marginBottom: 24,
                    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
                    overflow: 'hidden'
                  }}
                >
                  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–ø—ã */}
                  <div
                    onClick={() => toggleGroup(key)}
                    style={{
                      backgroundColor: '#f8f9fa',
                      padding: 20,
                      borderBottom: '1px solid #dee2e6',
                      cursor: 'pointer',
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center'
                    }}
                  >
                    <div>
                      <h2 style={{
                        fontSize: 20,
                        fontWeight: 600,
                        color: '#495057',
                        margin: 0,
                        marginBottom: 8
                      }}>
                        üë§ {group.employeeName}
                      </h2>
                      <div style={{
                        display: 'flex',
                        alignItems: 'center',
                        gap: 16
                      }}>
                        <span style={{
                          backgroundColor: '#007bff',
                          color: 'white',
                          padding: '4px 12px',
                          borderRadius: 16,
                          fontSize: 12,
                          fontWeight: 600,
                          textTransform: 'uppercase'
                        }}>
                          {group.role === 'self' ? '–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞' :
                           group.role === 'manager' ? '–û—Ü–µ–Ω–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞' :
                           group.role === 'p1_peer' ? 'Peer-–æ—Ü–µ–Ω–∫–∞' :
                           group.role === 'p2_peer' ? 'Peer-–æ—Ü–µ–Ω–∫–∞' :
                           'Peer –æ—Ü–µ–Ω–∫–∞'}
                        </span>
                        <span style={{ color: '#6c757d', fontSize: 14 }}>
                          {group.items?.length || 0} –Ω–∞–≤—ã–∫–æ–≤
                        </span>
                      </div>
                    </div>
                    <span style={{ fontSize: 20, color: '#6c757d' }}>
                      {isCollapsed ? '‚ñ∂' : '‚ñº'}
                    </span>
                  </div>

                  {/* –°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤ */}
					{!isCollapsed && (
					  <div style={{ padding: '20px 0' }}>
						{(group.items || []).map((item) => (
						  <ScoreRow
							key={item.pageId}
							item={item}
							currentScore={scoreData.get(item.pageId)?.value} // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ø–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â—É—é –æ—Ü–µ–Ω–∫—É
							onChange={({ value }) => updateSkillScore(item.pageId, group.role, value)}
							hideComment={true}
						  />
						))}
					  </div>
					)}
                </div>
              );
            })}

            {/* –ü–∞–Ω–µ–ª—å –¥–µ–π—Å—Ç–≤–∏–π */}
            <div style={{
              backgroundColor: 'white',
              borderRadius: 12,
              padding: 24,
              boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
              position: 'sticky',
              bottom: 24
            }}>
              <div style={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
                flexWrap: 'wrap',
                gap: 16
              }}>
                <div>
                  <div style={{ 
                    fontWeight: 600, 
                    color: '#495057',
                    marginBottom: 4
                  }}>
                    –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ: {Math.round((ratedSkills / totalSkills) * 100) || 0}%
                  </div>
                  <div style={{ color: '#6c757d', fontSize: 14 }}>
                    {ratedSkills === totalSkills ? 
                      '‚úÖ –í—Å–µ –Ω–∞–≤—ã–∫–∏ –æ—Ü–µ–Ω–µ–Ω—ã' : 
                      `${totalSkills - ratedSkills} –Ω–∞–≤—ã–∫–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å`
                    }
                  </div>
                </div>

                <div style={{ display: 'flex', gap: 12 }}>
                  <button
                    type="submit"
                    disabled={submitting || ratedSkills === 0}
                    style={{
                      padding: '12px 24px',
                      backgroundColor: submitting ? '#6c757d' : '#28a745',
                      color: 'white',
                      border: 'none',
                      borderRadius: 8,
                      fontSize: 16,
                      fontWeight: 600,
                      cursor: submitting || ratedSkills === 0 ? 'not-allowed' : 'pointer',
                      transition: 'background-color 0.2s ease',
                      boxShadow: '0 2px 4px rgba(40,167,69,0.2)',
                      display: 'flex',
                      alignItems: 'center',
                      gap: 8
                    }}
                  >
                    {submitting ? (
                      <>
                        <div style={{
                          width: 16,
                          height: 16,
                          border: '2px solid rgba(255,255,255,0.3)',
                          borderTop: '2px solid white',
                          borderRadius: '50%',
                          animation: 'spin 1s linear infinite'
                        }} />
                        –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...
                      </>
                    ) : (
                      <>
                        üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É
                      </>
                    )}
                  </button>
                </div>
              </div>

              {submitMessage && (
                <div style={{
                  marginTop: 16,
                  padding: 12,
                  borderRadius: 8,
                  backgroundColor: submitMessage.includes('‚ùå') ? '#f8d7da' : 
                                  submitMessage.includes('üîÑ') ? '#d1ecf1' : '#d4edda',
                  color: submitMessage.includes('‚ùå') ? '#721c24' : 
                         submitMessage.includes('üîÑ') ? '#0c5460' : '#155724',
                  fontSize: 14,
                  lineHeight: 1.4,
                  border: `1px solid ${submitMessage.includes('‚ùå') ? '#f5c6cb' : 
                                      submitMessage.includes('üîÑ') ? '#bee5eb' : '#c3e6cb'}`
                }}>
                  {submitMessage}
                </div>
              )}
            </div>
          </form>
        </div>
      </StateHandler>

      {!loading && (
        <div style={{
          textAlign: 'center',
          color: '#6c757d',
          fontSize: 12,
          paddingBottom: 24
        }}>
          –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –∑–∞ {loadTime.toFixed(2)} —Å–µ–∫.
        </div>
      )}

      {/* CSS –∞–Ω–∏–º–∞—Ü–∏–∏ */}
      <style jsx>{`
        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
        
        @keyframes shimmer {
          0% { transform: translateX(-20px); opacity: 0; }
          50% { opacity: 1; }
          100% { transform: translateX(20px); opacity: 0; }
        }
      `}</style>
    </div>
  );
}